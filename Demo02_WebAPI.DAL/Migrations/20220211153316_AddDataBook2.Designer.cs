// <auto-generated />
using System;
using Demo02_WebAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Demo02_WebAPI.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220211153316_AddDataBook2")]
    partial class AddDataBook2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<Guid>("AuthorsAuthorId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<Guid>("BooksBookId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("AuthorsAuthorId", "BooksBookId");

                    b.HasIndex("BooksBookId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorsAuthorId = new Guid("4a0effdc-5290-4bbd-906f-0bad015bd83c"),
                            BooksBookId = new Guid("0a2ddeef-5121-4d4f-b866-4dcfeaad4a8c")
                        },
                        new
                        {
                            AuthorsAuthorId = new Guid("b6d536e9-afb3-40c7-9e87-14144eaae072"),
                            BooksBookId = new Guid("15429365-7ecd-497f-8889-63d732be0dd9")
                        },
                        new
                        {
                            AuthorsAuthorId = new Guid("bf04a921-d509-4708-bbea-ae48a37fc953"),
                            BooksBookId = new Guid("15429365-7ecd-497f-8889-63d732be0dd9")
                        });
                });

            modelBuilder.Entity("Demo02_WebAPI.DAL.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("author_id");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("lastname");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = new Guid("4a0effdc-5290-4bbd-906f-0bad015bd83c"),
                            Firstname = "Riri",
                            Lastname = "Duck"
                        },
                        new
                        {
                            AuthorId = new Guid("b6d536e9-afb3-40c7-9e87-14144eaae072"),
                            Firstname = "Della",
                            Lastname = "Duck"
                        },
                        new
                        {
                            AuthorId = new Guid("bf04a921-d509-4708-bbea-ae48a37fc953"),
                            Firstname = "Zaza",
                            Lastname = "Vanderquack"
                        },
                        new
                        {
                            AuthorId = new Guid("d397228d-3c0b-424e-bfa6-7ea98495125e"),
                            Firstname = "Gontran",
                            Lastname = "Bonheur"
                        });
                });

            modelBuilder.Entity("Demo02_WebAPI.DAL.Entities.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("book_id");

                    b.Property<short?>("NbPage")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("nb_page");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)")
                        .HasColumnName("title");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = new Guid("0a2ddeef-5121-4d4f-b866-4dcfeaad4a8c"),
                            NbPage = (short)42,
                            Title = "Hello World"
                        },
                        new
                        {
                            BookId = new Guid("15429365-7ecd-497f-8889-63d732be0dd9"),
                            Title = "Bonjour"
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("Demo02_WebAPI.DAL.Entities.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsAuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo02_WebAPI.DAL.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
